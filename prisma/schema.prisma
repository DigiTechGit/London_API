// prisma/schema.prisma

// Especifica o provedor do banco de dados e a URL de conexão
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Lê a URL do banco de dados do arquivo .env
}

// Define o gerador de cliente Prisma
generator client {
  provider = "prisma-client-js"
}

// Modelo para armazenar os dados do usuário
model Motorista {
  id        Int    @id @default(autoincrement())
  placa     String @unique // A placa deve ser única no banco de dados
  idCircuit String
}

model Ctes {
  id              Int     @id @default(autoincrement())
  chaveCTe        String
  nroCTRC         Int?
  valorFrete      Float
  placaVeiculo    String
  previsaoEntrega String
  Unidade         String?
  motoristaId     Int
  remetenteId     Int
  destinatarioId  Int
  recebedorId     Int
  statusId        Int
  codUltOco       Int     @default(0)

  createdAt    DateTime      @default(now()) // Campo para registrar a data de criação
  dt_alteracao DateTime      @default(now()) // Campo para registrar a data de alteracao
  motorista    Motorista_ssw @relation(fields: [motoristaId], references: [id])
  remetente    Remetente     @relation(fields: [remetenteId], references: [id])
  destinatario Destinatario  @relation(fields: [destinatarioId], references: [id])
  recebedor    Recebedor     @relation(fields: [recebedorId], references: [id])
  status       StatusEnvio   @relation(fields: [statusId], references: [id]) // Relacionamento com status
}

model Motorista_ssw {
  id   Int    @id @default(autoincrement())
  nome String
  cpf  String @unique
  ctes Ctes[]
}

model Remetente {
  id      Int     @id @default(autoincrement())
  cnpjCPF String  @unique
  tipo    String?
  nome    String
  ctes    Ctes[]
}

model Destinatario {
  id      Int     @id @default(autoincrement())
  cnpjCPF String  @unique
  tipo    String?
  nome    String
  ctes    Ctes[]
}

model Recebedor {
  id          Int     @id @default(autoincrement())
  cnpjCPF     String  @unique
  tipo        String?
  nome        String
  endereco    String
  numero      String
  bairro      String
  cep         String
  cidade      String
  uf          String
  foneContato String?
  ctes        Ctes[]
}

model StatusEnvio {
  id        Int     @id @default(autoincrement())
  status    String  @unique
  descricao String?
  ctes      Ctes[]
}

model log {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  desc      String
  tp        String
}

model Unidade {
  id      String  @id @default(uuid())
  Unidade String
  idAtivo Boolean
  desc    String?
}

model CNPJ {
  id      String  @id @default(uuid())
  CNPJ    String
  idAtivo Boolean
  desc    String?
}

model DadosUsuario {
  id      String @id @default(uuid())
  tpDados String @unique
  vlDados String
}
